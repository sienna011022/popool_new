plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

ext {
	set('springCloudVersion', "2021.0.3")
	queryDslVersion = "5.0.0"
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//test
	testImplementation 'org.assertj:assertj-core:3.23.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	//mysql
	runtimeOnly 'mysql:mysql-connector-java'

	//other module
	implementation project(path: ":bbl-common")

	//Eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

jar {
	enabled = false
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
	if (file(querydslDir).exists()) {
		delete(file(querydslDir))
	}
}
clean.doLast {
	delete file(querydslDir)
}
